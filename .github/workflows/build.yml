name: Build and Release

on:
  push:
    branches:
      - dev
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from pom.xml
        if: startsWith(github.ref, 'refs/tags/v')
        id: get_version
        run: |
          for /f "tokens=2 delims=<version></version>" %%i in ('findstr /r "<version>[0-9]*\.[0-9]*\.[0-9]*-SNAPSHOT</version>" pom.xml') do (
            set "VERSION=%%i"
            set "EXE_VERSION=%%i"
          )
          set "EXE_VERSION=%EXE_VERSION:-SNAPSHOT=%"
          set "JAR_NAME=InvoiceGenerator-%VERSION%.jar"
          set "EXE_NAME=InvoiceGenerator-%EXE_VERSION%.exe"
          echo VERSION=%VERSION% >> %GITHUB_ENV%
          echo EXE_VERSION=%EXE_VERSION% >> %GITHUB_ENV%
          echo JAR_NAME=%JAR_NAME% >> %GITHUB_ENV%
          echo EXE_NAME=%EXE_NAME% >> %GITHUB_ENV%
        shell: cmd

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Download JavaFX SDK
        run: |
          curl -L -o javafx-sdk.zip https://download2.gluonhq.com/openjfx/23.0.2/openjfx-23.0.2_windows-x64_bin-sdk.zip
          unzip javafx-sdk.zip -d javafx-sdk
        shell: cmd

      - name: Build with Maven
        run: mvn -B clean package
        shell: cmd

      - name: Create runtime image with jlink
        run: |
          jlink --module-path "%JAVA_HOME%\jmods;javafx-sdk\javafx-sdk-23.0.2\lib" ^
                --add-modules javafx.controls,javafx.fxml,javafx.graphics,javafx.base,java.logging ^
                --output target/runtime
        shell: cmd

      - name: Package executable with jpackage
        run: |
          jpackage --input target ^
                   --main-jar target/invoice-generator-${{ env.VERSION }}.jar ^
                   --main-class com.invoicegenerator.Main ^
                   --name InvoiceGenerator ^
                   --app-version ${{ env.EXE_VERSION }} ^
                   --type exe ^
                   --runtime-image target/runtime ^
                   --win-dir-chooser ^
                   --dest target ^
                   --verbose
        shell: cmd

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: InvoiceGenerator-${{ env.EXE_VERSION }}
          path: target/InvoiceGenerator-${{ env.EXE_VERSION }}.exe